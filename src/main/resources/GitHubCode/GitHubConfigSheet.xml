<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>GitHubCode</web>
  <name>GitHubConfigSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>GitHub.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1453935600000</creationDate>
  <date>1453935600000</date>
  <contentUpdateDate>1453935600000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>GitHubCode.GitHubConfigSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>146950a1-8cc5-4fb1-86de-01d6ac9ab4b3</guid>
    <property>
      <cache>forbid</cache>
    </property>
    <property>
      <code>require(['jquery'], function($) {
  $('#selectedBranch').change(function(event) {
    if($(this).val() == 'createNewBranch') {
      $('#branchName').val('');
      $('#branchName_lbl').show();
      $('#branchName_hint').show();
      $('#branchName').show();
    } else {
      $('#branchName_lbl').hide();
      $('#branchName_hint').hide();
      $('#branchName').hide();
      $('#branchName').val($(this).val());
    }
  }).change(); // trigger once if needed
  $('#select-all').click(function(event) {
    if(this.checked) {
        // Iterate each checkbox
        $(':checkbox').each(function() {
            this.checked = true;
        });
    } else {
    $(':checkbox').each(function() {
          this.checked = false;
      });
    }
  });
});</code>
    </property>
    <property>
      <name>SyncBranchSelected</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.SheetClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultEditMode>
        <disabled>0</disabled>
        <name>defaultEditMode</name>
        <number>1</number>
        <prettyName>Default Edit Mode</prettyName>
        <size>15</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultEditMode>
    </class>
    <name>GitHubCode.GitHubConfigSheet</name>
    <number>0</number>
    <className>XWiki.SheetClass</className>
    <guid>025400ae-d857-4375-9222-34691f9e6ced</guid>
    <property>
      <defaultEditMode/>
    </property>
  </object>
  <content>{{velocity}}
#set($discard = $xwiki.jsx.use('GitHubCode.GitHubConfigSheet', {'defer': false}))
#if(!$xwiki.hasProgrammingRights())
  ## Programming rights are required
  {{warning}}${services.localization.render("github.warning.programmingrightsrequired")}{{/warning}}
#elseif(!$hasAdmin)
  ## Only a user with Admin-rights is allowed to perform the GitHub-sync
  {{warning}}${services.localization.render("github.warning.adminrightsrequired")}{{/warning}}
#elseif(!$request.action)
  ## No Action parameter given
  ## List current GitHub-configuration
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  #set($authObj = $doc.getObject("GitHubCode.GitHubAuthClass", "contextuser", $xcontext.user))
  #if(!$authObj)
    ## No authentication object found for the current user
    ## Add a new authentication object
    #set($authObj = $doc.newObject("GitHubCode.GitHubAuthClass"))
    #if($context.display == 'edit')
      #set($discard = $doc.use($authObj))
      #set($discard = $doc.set("contextuser", $xcontext.user))
      #set($discard = $doc.use("GitHubCode.GitHubConfigClass"))
      #set($discard = $doc.save())
    #end
  #end
  #set($authClass = $authObj.xWikiClass)
  {{html wiki="true"}}
  (% class="xform" %)
  (((
    #if($context.display != "edit")
      ## Show the button to list changed pages or change the branch if not in Edit-mode
      &lt;form method='post' class='xform'&gt;
        &lt;input type="hidden" name="branchName" value="${githubConfigObj.getProperty('repository_branch').value}"&gt;
        &lt;div class="buttons"&gt;
          &lt;span class="buttonwrapper"&gt;
            &lt;button name="action" type="submit" class="button" value="listChangedPages"&gt;${services.localization.render("github.configsheet.listpages")}&lt;/button&gt;
            &lt;button name="action" type="submit" class="button" value="changeBranch"&gt;${services.localization.render("github.configsheet.changebranch")}&lt;/button&gt;
            &lt;hr/&gt;
          &lt;/span&gt;
        &lt;/div&gt;
      &lt;/form&gt;
    #end
    #foreach($prop in $githubConfigClass.properties)
      ## List the GitHub configuration
      #if($prop.name == "username")
        ## Only show the Authentication-object of the current user
        #set($discard = $doc.use($authObj))
        ; &lt;label for="GitHubCode.GitHubAuthClass_0_username"&gt;$escapetool.xml($doc.displayPrettyName('username', false, false))&lt;/label&gt;
        : &lt;span class="xHint"&gt;$authClass.get('username').propertyClass.getTooltip($xcontext.context)&lt;/span&gt;
        : $doc.display('username')
        ; &lt;label for="GitHubCode.GitHubAuthClass_0_email"&gt;$escapetool.xml($doc.displayPrettyName('email', false, false))&lt;/label&gt;
        : &lt;span class="xHint"&gt;$authClass.get('email').propertyClass.getTooltip($xcontext.context)&lt;/span&gt;
        : $doc.display('email')
        #if($context.display == 'edit')
          ; &lt;label for="GitHubCode.GitHubAuthClass_0_password"&gt;$escapetool.xml($doc.displayPrettyName('password', false, false))&lt;/label&gt;
          : &lt;span class="xHint"&gt;$authClass.get('password').propertyClass.getTooltip($xcontext.context)&lt;/span&gt;
          : $doc.display('password')
          #set($discard = $doc.set("contextuser", $xcontext.user))
          $doc.display("contextuser", "hidden")
        #end
        #set($discard = $doc.use("GitHubCode.GitHubConfigClass"))
      #elseif($prop.name != "username" &amp;&amp; $prop.name != "password" &amp;&amp; $prop.name != "email")
        ## Show the properties of the GitHub configuration
        #set($tooltip = $prop.propertyClass.getTooltip($xcontext.context))
        ; &lt;label for="GitHubCode.GitHubConfigClass_0_${prop.name}"&gt;$escapetool.xml($doc.displayPrettyName($prop.name, false, false))&lt;/label&gt;
        : &lt;span class="xHint"&gt;#if($tooltip!="GitHubCode.GitHubConfigClass_${prop.name}_tooltip")${tooltip}#end&lt;/span&gt;
        #if($context.display == "edit" &amp;&amp; $prop.name == "savedlist")
          #set($path = $xwiki.getURL("GitHubCode.SavedListSuggest", "view"))
          #set($script = $path + "?xpage=plain&amp;outputSyntax=plain&amp;")
          &lt;input type="text" id="GitHubCode.GitHubConfigClass_0_savedlist" name="GitHubCode.GitHubConfigClass_0_savedlist" onfocus="tsuggest(this);" value="$!doc.getValue("savedlist")" /&gt;
          &lt;script type="text/javascript"&gt;
            // &lt;![CDATA[
            function tsuggest(field) {
              if (!field.suggest) {
                field.suggest = new ajaxSuggest(field, {script:'$script', varname: 'input', seps:'', offsety: 13, 
                                 callback: function(obj) { field.value=obj.info;} });
                field.suggest.options.timeout = 5000;
              }
            }
            // ]]&gt;
          &lt;/script&gt;
        #else
          : $doc.display($prop.getName())
        #end
      #end
    #end
  )))
  {{/html}}

#elseif($request.action == "changeBranch")
  ## User wants to change the branch to commit to / update from
  ## Hide Edit- and More Actions-buttons since we're using an existing GitHubConfig and want to change default branch
  #set($displayContentMenu = false)
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  #set($defaultBranch = $githubConfigObj.getProperty('repository_branch').value.toString())
  #set($branches = $services.Github.getBranches("${doc.fullName}"))
  #set($discard = $doc.use('GitHubCode.GitHubConfigClass'))
  {{html wiki="true"}}
  (% class="xform" %)
  (((
    ## Show GitHub Repository
    ; &lt;label for="GitHubCode.GitHubConfigClass_0_repository_name"&gt;$escapetool.xml($doc.displayPrettyName('repository_name', false, false))&lt;/label&gt;
    : $doc.display('repository_name')
    ## Show Default Branch
    ; &lt;label for="GitHubCode.GitHubConfigClass_0_repository_branch"&gt;$escapetool.xml($doc.displayPrettyName('repository_branch', false, false))&lt;/label&gt;
    : $doc.display('repository_branch')
    ## Show List of existing branches
    ; &lt;label for="GitHubCode.GitHubConfigClass_0_repository_branch"&gt;$services.localization.render('github.configsheet.selectCustomBranch')&lt;/label&gt;
    : &lt;span class="xHint"&gt;$services.localization.render('github.configsheet.selectCustomBranch_tooltip')&lt;/span&gt;
      &lt;select name="selectedBranch" id="selectedBranch"&gt;
        #foreach($branch in $branches)
          #if ($branch==$defaultBranch)
            &lt;option value="${branch}" selected&gt;${branch}&lt;/option&gt;
          #else
            &lt;option value="${branch}"&gt;${branch}&lt;/option&gt;
          #end
        #end
        ## Add option to create a new branch
        &lt;option value="createNewBranch"&gt;$services.localization.render('github.configsheet.createNewBranchOption')&lt;/option&gt;
      &lt;/select&gt;
    ## Add inputbox for the name of the new branch. Inputbox is synched by javascript with selectedBranch selector
    ## so it will always contain the branchName, whether it is a new branchname or an existing one.
    &lt;form method='post' class='xform'&gt;
      ; &lt;label for="branchName" id="branchName_lbl"&gt;$services.localization.render('github.configsheet.createNewBranch')&lt;/label&gt;
      : &lt;span class="xHint" id="branchName_hint"&gt;$services.localization.render('github.configsheet.createNewBranch_tooltip', $githubConfigObj.getProperty('repository_name').value)&lt;/span&gt;
      &lt;input type="text" name="branchName" id="branchName" size="20" /&gt;
      ## Show Path
      ; &lt;label for="GitHubCode.GitHubConfigClass_0_repository_path"&gt;$escapetool.xml($doc.displayPrettyName('repository_path', false, false))&lt;/label&gt;
      : $doc.display('repository_path')
      ## Show the button to list changed pages, based on the selected branch
      &lt;div class="buttons"&gt;
        &lt;hr/&gt;
        &lt;span class="buttonwrapper"&gt;
          &lt;button name="action" type="submit" class="button" value="listChangedPages"&gt;${services.localization.render("github.configsheet.listpages")}&lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  )))
  {{/html}}

#elseif($request.action == "listChangedPages")
  ## List the differences between the pages in this wiki and those on GitHub
  ## Hide Edit- and More Actions-buttons since we're using an existing GitHubConfig to list changed pages
  #set($displayContentMenu = false)
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  #set($discard = $doc.use('GitHubCode.GitHubConfigClass'))
  {{html wiki="true"}}
  (% class="xform" %)
  (((
    ## Show Configuration used for compare
    ; &lt;label for="GitHub_Config"&gt;${services.localization.render("github.configsheet.configurationused")}&lt;/label&gt;
    : $githubConfigObj.getProperty('repository_name').value - $request.branchName - $!githubConfigObj.getProperty('repository_path').value
    ## Get the Changed Pages and their GitHub-status
    #set($changedPagesMap = $services.Github.getChangedPages("${doc.fullName}", "${request.branchName}"))
    #if($changedPagesMap.keySet().size()!=0)
      ## Changed pages have been found
      #set($canCommit = false)
      #set($canUpdate = false)
      &lt;hr/&gt;
      ## Show changed pages and their GitHub-status
      &lt;form method='post' class='xform'&gt;
        &lt;input type="hidden" name="branchName" value="${request.branchName}" /&gt;
##      $changedPagesMap
        &lt;input type="checkbox" name="select-all" id="select-all" /&gt;$services.localization.render("github.configsheet.selectallpages")&lt;br /&gt;&lt;br /&gt;
        &lt;table&gt;
          &lt;tr&gt;
            &lt;th&gt;${services.localization.render("github.configsheet.listpages.page")}&lt;/th&gt;
            &lt;th&gt;${services.localization.render("github.configsheet.listpages.status")}&lt;/th&gt;
            &lt;th&gt;${services.localization.render("github.configsheet.listpages.action")}&lt;/th&gt;
            &lt;th&gt;&amp;nbsp;&lt;/th&gt;
          &lt;/tr&gt;
          changedPage.page
          #foreach($page in $changedPagesMap.keySet())
            #set($checkboxId = "checkbox-${velocityCount}")
            #set($changedPage = $changedPagesMap.get($page))
            #if($changedPage.status=="AG"||$changedPage.status=="F"||$changedPage.status=="C"||$changedPage.status=="MX"||$changedPage.status=="U")
              #set($canCommit = true)
            #end
            #if($changedPage.status=="F"||$changedPage.status=="MG"||$changedPage.status=="C"||$changedPage.status=="NG"||$changedPage.status=="U")
              #set($canUpdate = true)
            #end
            #set($statusExtra = "")
            #if($changedPage.statusparent!="")
              #set($statusExtra = ${services.localization.render("github.configsheet.statusparent_${changedPage.statusparent}")})
            #end
            #if($changedPage.statuslanguage!="")
              #if($statusExtra!="")
                #set($statusExtra = ${services.localization.render("github.configsheet.statuslanguage_${changedPage.statuslanguage}")})
              #else
                #set($statusExtra = ${services.localization.render("github.configsheet.statuslanguage_${changedPage.statuslanguage}")})
              #end
            #end
            ## encode the language of the document after the document name, after a dot. Will be processed on commit
##          &lt;input type="hidden" name="${changedPage.fullname}.$!{changedPage.language}_sha" value="${changedPage.githubsha}" /&gt;
            &lt;tr&gt;
              &lt;td&gt;${page} (v${changedPage.xwikiversion})&lt;/td&gt;
##              &lt;td&gt;&lt;input type="checkbox" name="page" value="${changedPage.fullname}.$!{changedPage.language}" id="${checkboxId}/&gt;${services.localization.render("github.configsheet.status_${changedPage.status}")} $statusExtra&lt;/td&gt;
              &lt;td&gt;&lt;input type="checkbox" name="page" value="${changedPage.fullname}" id="${checkboxId}/&gt;${services.localization.render("github.configsheet.status_${changedPage.status}")} $statusExtra&lt;/td&gt;
              #if($changedPage.status!="AG")
                #set($dName=$changedPage.fullname.toString())
                #set($dLanguage=$changedPage.language.toString())
                &lt;td&gt;
                  [[${services.localization.render("github.configsheet.listpages.action.viewdiff")}&gt;&gt;${doc.fullName}||queryString="action=comparePage&amp;branch=${request.branchName}&amp;page=${changedPage.fullname}&amp;githublanguage=${changedPage.language}&amp;githubsha=${changedPage.githubsha}" target=_blank]] - 
                  [[${services.localization.render("github.configsheet.listpages.action.viewdiffunformatted")}&gt;&gt;${doc.fullName}||queryString="action=comparePage&amp;branch=${request.branchName}&amp;page=${changedPage.fullname}&amp;githublanguage=${changedPage.language}&amp;githubsha=${changedPage.githubsha}&amp;unformatted=1" target=_blank]] 
                  #if($changedPage.status!="NG")
                    - [[${services.localization.render("github.configsheet.listpages.action.viewdoc")}&gt;&gt;${changedPage.fullname}||queryString="language=${dLanguage}" target=_blank]]
                  #end
                &lt;/td&gt;
              #else
                ## Add a no-break-space to skip the Action-column if no actions are applicable
                &lt;td&gt;&amp;nbsp;&lt;/td&gt;
              #end
              ## Include the language parameters in a hidden column of the table
              &lt;td&gt;&lt;input type="hidden" name="${changedPage.fullname}_sha" value="${changedPage.githubsha}" /&gt;&lt;/td&gt;
##              &lt;td&gt;&lt;input type="hidden" name="${changedPage.fullname}.$!{changedPage.language}_sha" value="${changedPage.githubsha}" /&gt;&lt;/td&gt;
            &lt;/tr&gt;
          #end
        &lt;/table&gt;
        ## Show buttons: Commit to GitHub and Update from GitHub
        &lt;div class="buttons"&gt;
          &lt;hr/&gt;
          &lt;span class="buttonwrapper"&gt;
            &lt;button name="action" type="submit" class="button" value="commitSelectedPages" #if(!$canCommit)"disabled"#end&gt;${services.localization.render("github.configsheet.commitall")}&lt;/button&gt;
            &lt;button name="action" type="submit" class="button" value="updateSelectedPages" #if(!$canUpdate)"disabled"#end&gt;${services.localization.render("github.configsheet.updateall")}&lt;/button&gt;
          &lt;/span&gt;
        &lt;/div&gt;
      &lt;/form&gt;
    #else
      ## No differences found between wiki-pages and GitHub-pages
      ${services.localization.render("github.configsheet.allpagesequal")}
    #end
  )))
  {{/html}}

#elseif($request.action == "updateSelectedPages")
  ## User wants to update this wiki with the selected pages from GitHub
  ## Prerequisite: Changed pages have been shown (listChangedPages) and the user has selected the pages he/she wants to Update from GitHub
  #set($displayContentMenu = false)
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  {{html wiki="true"}}
  (% class="xform" %)
  (((
    ## Show Configuration used for update
    ; &lt;label for="GitHub_Config"&gt;${services.localization.render("github.configsheet.configurationused")}&lt;/label&gt;
    : $githubConfigObj.getProperty('repository_name').value - $request.branchName - $!githubConfigObj.getProperty('repository_path').value
    &lt;hr/&gt;
    #set($pagesToUpdate = $xwiki.arrayList)
    #foreach($page in $request.getParameterValues("page"))
      #set($discard = $pagesToUpdate.add($page))
    #end
    $pagesToUpdate
    #set($updatedPagesList = $services.Github.updatePages("${doc.fullName}", "${request.branchName}", $pagesToUpdate, "Mijn comment"))
    ; &lt;label for="Updated_Pages"&gt;${services.localization.render("github.configsheet.pagesupdated")}&lt;/label&gt;
    #foreach($page in $updatedPagesList.keySet())
      : $page
    #end
    &lt;hr/&gt;
    &lt;form method='post' class='xform'&gt;
      &lt;input type="hidden" name="branchName" value="${request.branchName}" /&gt;
      ## Show the button to go back to the list of changed pages
      &lt;div class="buttons"&gt;
        &lt;hr/&gt;
        &lt;span class="buttonwrapper"&gt;
          &lt;button name="action" type="submit" class="button" value="listChangedPages"&gt;${services.localization.render("github.configsheet.backtolist")}&lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  )))
  {{/html}}

#elseif($request.action == "commitSelectedPages")
  ## User wants to commit the selected pages from this wiki to GitHub
  ## Prerequisite: Changed pages have been shown (listChangedPages) and the user has selected the pages he/she wants to Commit to GitHub
  #set($displayContentMenu = false)
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  {{html wiki="true"}}
  (% class="xform" %)
  (((
    &lt;form method='post' class='xform'&gt;
      &lt;input type="hidden" name="branchName" value="${request.branchName}" /&gt;
      ## Show Configuration used for commit
      ; &lt;label for="GitHub_Config"&gt;${services.localization.render("github.configsheet.configurationused")}&lt;/label&gt;
      : $githubConfigObj.getProperty('repository_name').value - $request.branchName - $!githubConfigObj.getProperty('repository_path').value
      &lt;hr/&gt;
      #set($pagesToCommit = $xwiki.arrayList)
      ; &lt;label for="Commit_Pages"&gt;${services.localization.render("github.configsheet.confirmcommittingpage")}&lt;/label&gt;
      #foreach($page in $request.getParameterValues("page"))
        #set($discard = $pagesToCommit.add($page))
        : $page
        &lt;input type="hidden" name="page" value="${page}" /&gt;
      #end
      ; &lt;label for="commitmessage"&gt;${services.localization.render("github.configsheet.commitmessage")}&lt;/label&gt;
      &lt;textarea name="commitmessage" rows="5" cols="80"&gt;
      &lt;/textarea&gt;
      ## TODO: add POM-option?
      &lt;div class="buttons"&gt;
        &lt;hr/&gt;
        &lt;span class="buttonwrapper"&gt;
          &lt;button name="action" type="submit" class="button" value="commitConfirmed"&gt;${services.localization.render("github.configsheet.commit")}&lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  )))
  {{/html}}

#elseif($request.action == "commitConfirmed")
  ## User has confirmed commit the selected pages from this wiki to GitHub
  ## Prerequisite: pages to commit have been shown, user has added a commitmessage and confirmed the commit
  #set($displayContentMenu = false)
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  {{html wiki=true}}
    ${services.localization.render("github.defaultmessage",[${githubName},${request.branch}])}
    &lt;br /&gt;
    $services.localization.render("github.committingpages")
    #set($pagesToCommit = $xwiki.arrayList)
    &lt;ul&gt;
      #foreach($page in $request.getParameterValues("page"))
        &lt;li&gt;$page&lt;/li&gt;
        #set($ok = $pagesToCommit.add($page))
      #end
    &lt;/ul&gt;
    #set($test = $services.Github.commitFiles("${doc.fullName}", "${request.branchName}", $pagesToCommit, $request.commitmessage, $!request.pom))
    $test
    $services.localization.render("github.committsuccessfull")
    &lt;br /&gt;
    [[${services.localization.render("github.backtolist")}&gt;&gt;${doc.fullName}||queryString="action=list&amp;github=${request.github}&amp;branch=${request.branch}"]] - [[${services.localization.render("github.backtoselectbranch")}&gt;&gt;${doc.fullName}||queryString="github=${request.github}"]] - [[${services.localization.render("github.backtoselectconfig")}&gt;&gt;${doc.fullName}]]
  {{/html}}

#elseif($request.action == "comparePage")
  ## User wants to see the differences between the selected page and the page in GitHub
  ## Prerequisite: Changed pages have been shown (listChangedPages) and the user has selected the page he/she wants to Compare to GitHub
  #set($displayContentMenu = false)
  #set($discard = $services.localization.use('document', 'GitHubCode.GitHubTranslations'))
  #set($githubConfigObj = $doc.getObject('GitHubCode.GitHubConfigClass'))
  #set($githubConfigClass = $githubConfigObj.xWikiClass)
  {{html clean=false}}
    &lt;style type="text/css"&gt;
      .diffremoveword {
        background-color: #FFAAAA;
      }
      .diffaddword {
        background-color: #AAFFAA;
      }
    &lt;/style&gt;
    #set($comparePage = $xwiki.getDocument($request.page))
    #if($request.githublanguage)
      #set($comparePage = $comparePage.getTranslatedDocument($request.githublanguage))
    #end
    #if("1"=="$!{request.unformatted}")
      #set($results=$services.Github.showXMLDiff("${doc.fullName}", "${request.branchName}", $comparePage, "${request.githubsha}", false))
      $results
    #else
      #set($results=$services.Github.showXMLDiff("${doc.fullName}", "${request.branchName}", $comparePage, "${request.githubsha}", true))
      $results
    #end
  {{/html}}

#end
{{/velocity}}</content>
</xwikidoc>
